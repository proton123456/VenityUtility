local args = {
    [1] = "venity.ml/VenityHub || Status: Working",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
wait(5)
local args = {
    [1] = "venity.ml/VenityHub || Made by n1wu#9214",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
--//Supported Games




--//obfuscated script (not yet)


local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()



-- Script generated by SimpleSpy - credits to exx#9394


setclipboard("https://www.venity.ml/getkey")

local Window = Rayfield:CreateWindow({
	Name = "VenityUtility - Fishing Simulator", 
	LoadingTitle = "VenityUtility",
	LoadingSubtitle = "by n1wu",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "venityHub"
	},
        Discord = {
        	Enabled = true,
        	Invite = "PAg8AVrX", -- The Discord invite code, do not include discord.gg/
        	RememberJoins = true -- Set this to false to make them join the discord every time they load it up
        },
	KeySystem = true, -- Set this to true to use our key system
	KeySettings = {
		Title = "VenityUtility - Fishing Simulator",
		Subtitle = "Key System",
		Note = "Key Link copied to clipboard.",
		FileName = "venityKey",
		SaveKey = true,
		GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = "https://pastebin.com/raw/cuU6RVfE",
	}
})
wait(5)
Rayfield:LoadConfiguration()
local Tab = Window:CreateTab("Main") -- Title, Image
local Tab2 = Window:CreateTab("LocalPlayer")

local Label = Tab:CreateLabel("Throw your fishing pole out into the water")


local Toggle = Tab:CreateToggle({
	Name = "Auto CatchFish",
	CurrentValue = false,
	Flag = "Toggle2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)

getgenv().autofish = Value;

		while getgenv().autofish == true do
wait(1)
game:GetService("ReplicatedStorage").CloudFrameShared.DataStreams.FishCaught:FireServer()
-- Script generated by SimpleSpy - credits to exx#9394

end
	end,
})



local Toggle = Tab:CreateToggle({
	Name = "Autosell",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)

getgenv().autosell = Value;

		while getgenv().autosell == true do
wait(2)
-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "SellEverything"
}

game:GetService("ReplicatedStorage").CloudFrameShared.DataStreams.processGameItemSold:InvokeServer(unpack(args))

end
	end,
})


local Slider = Tab2:CreateSlider({
	Name = "Walkspeed",
	Range = {16, 500},
	Increment = 1,
	Suffix = "WalkSpeed",
	CurrentValue = 16,
	Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value-- The function that takes place when the slider changes
    		-- The variable (Value) is a number which correlates to the value the slider is currently at
	end,
})
